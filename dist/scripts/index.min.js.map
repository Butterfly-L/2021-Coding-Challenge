{"version":3,"sources":["index.js"],"names":["data","filterData","JSON","parse","stringify","color","containerOdd","document","querySelector","containerEven","oddHtml","evenHtml","colorNum","tagHtml","widowWidth","window","innerWidth","colorLength","length","htmlFactory","item","demoLinkHtml","demoLink","title","readLink","showCards","innerHTML","colorNumOdd","colorNumEven","forEach","index","tag","unit","style","display","tagSelects","querySelectorAll","selectTag","tip","selected","isSameNode","this","classList","toggle","remove","contains","result","reduce","prev","current","includes","dataset","value","push","addEventListener","onload"],"mappings":"OAASA,SAAY,oBAEb,IAAIC,WAAaC,KAAKC,MAAMD,KAAKE,UAAUJ,OAE3C,MAAMK,MAAQ,CAAC,gBAAiB,aAAc,gBACxCC,aAAeC,SAASC,cAAc,kBACtCC,cAAgBF,SAASC,cAAc,mBAC7C,IAAIE,QAAU,GACVC,SAAW,GACXC,SAAW,EACXC,QAAU,GACVC,WAAaC,OAAOC,WACxB,MAAMC,YAAcZ,MAAMa,OAE1B,SAASC,YAAYP,EAAUQ,EAAMP,GACjC,IAAIQ,EAAeD,EAAKE,SAAY,uFAAsFF,EAAKE,sFAAwF,GAEvN,MAAQ,kCACWjB,MAAMO,sSAMuCQ,EAAKG,+DAE/DV,mLAGoFO,EAAKI,8JAIzFH,4CAKV,SAASI,YACLnB,aAAaoB,UAAY,GACzBjB,cAAciB,UAAY,GAC1B,IAAIhB,EAAU,GACVC,EAAW,GACXgB,EAAc,EACdC,EAAeD,EAAc,EACjCb,WAAaC,OAAOC,WAEpBf,WAAW4B,SAAQ,CAACT,EAAMU,KAElBhB,WAAa,MACbc,EAAeA,IAAiBX,YAAc,EAAIW,EAClDR,EAAKW,IAAIF,SAAQG,IACbnB,SAAY,0BAAyBmB,aAEzCrB,GAAYQ,YAAYS,EAAcR,EAAMP,SAC5Ce,IACAtB,aAAa2B,MAAMC,QAAU,QAG7BpB,WAAa,KAAOgB,EAAQ,GAAM,IAClCH,EAAcA,IAAgBV,YAAc,EAAIU,EAChDP,EAAKW,IAAIF,SAAQG,IACbnB,SAAY,0BAAyBmB,aAGzCtB,GAAWS,YAAYQ,EAAaP,EAAMP,SAC1Cc,KAGAb,WAAa,KAAOgB,EAAQ,GAAM,IAClCF,EAAeA,IAAiBX,YAAc,EAAIW,EAClDR,EAAKW,IAAIF,SAAQG,IACbnB,SAAY,0BAAyBmB,aAEzCrB,GAAYQ,YAAYS,EAAcR,EAAMP,SAC5Ce,KAGJf,QAAU,MAGdP,aAAaoB,UAAYhB,EACzBD,cAAciB,UAAYf,EAG9B,MAAMwB,WAAa5B,SAAS6B,iBAAiB,eAM7C,SAASC,YACL,IAAIC,EAAM/B,SAASC,cAAc,QAC7B+B,EAAWhC,SAASC,cAAc,aAClCgC,EAAaD,GAAUC,WAAWC,MAStC,GAPAH,EAAIL,MAAMC,QAAU,OAEpBO,KAAKC,UAAUC,OAAO,YAClBH,GAAYD,GAAUG,UAAUE,OAAO,YAGvCH,KAAKC,UAAUG,SAAS,cAAa5C,WAAaC,KAAKC,MAAMD,KAAKE,UAAUJ,QAC7EyC,KAAKC,UAAUG,SAAS,YAAY,CACnC,IAAIC,EAAS,GACb7C,WAAaD,KAAK+C,QAAO,CAACC,EAAMC,KAC5BA,EAAQlB,IAAImB,SAAST,KAAKU,QAAQC,QAAQN,EAAOO,KAAKJ,GACnDH,IACJ,IAEPrB,YAxBJU,WAAWN,SAAQE,IACfA,EAAIuB,iBAAiB,QAASjB,cA2BlCtB,OAAOwC,OAAS9B,YAChBV,OAAOuC,iBAAiB,SAAU7B","file":"index.min.js","sourcesContent":["import { data } from './articles.min.js';\n\n        let filterData = JSON.parse(JSON.stringify(data));\n\n        const color = ['bg-yellow-400', 'bg-red-500', 'bg-green-500']\n        const containerOdd = document.querySelector('.container-odd');\n        const containerEven = document.querySelector('.container-even');\n        let oddHtml = '';\n        let evenHtml = '';\n        let colorNum = 0;\n        let tagHtml = '';\n        let widowWidth = window.innerWidth;\n        const colorLength = color.length;\n\n        function htmlFactory(colorNum, item, tagHtml) {\n            let demoLinkHtml = item.demoLink ? `<a class=\"box_btn text-xl md:text-2xl font-bold text-gray-700 transition-all\" href=\"${item.demoLink}\" target=”_blank”>Demo <span class=\"transition-all arrow\">&rarr;</span></a>` : ''\n\n            return `\n            <div class=\"card ${color[colorNum]} place-self-start\">\n            <div class=\"card_upper\">\n                <div class=\"ball\"></div>\n                <div class=\"ball ml-2\"></div>\n                <div class=\"ball ml-2\"></div>\n            </div>\n            <h3 class=\"text-2xl md:text-4xl my-4 text-gray-700 font-bold\">${item.title}</h3>\n            <div class=\"flex\">\n                ${tagHtml}\n            </div>\n            <div class=\"flex justify-between mt-4\">\n                <a class=\"box_btn text-xl md:text-2xl font-bold text-gray-700 transition-all\" href=\"${item.readLink}\" target=”_blank”>\n                Read \n                <span class=\"transition-all arrow\">&rarr;</span>\n                </a>\n                ${demoLinkHtml}\n            </div>\n            </div>`\n        }\n\n        function showCards() {\n            containerOdd.innerHTML = '';\n            containerEven.innerHTML = '';\n            let oddHtml = '';\n            let evenHtml = '';\n            let colorNumOdd = 0;\n            let colorNumEven = colorNumOdd + 1;\n            widowWidth = window.innerWidth;\n\n            filterData.forEach((item, index) => {\n\n                if (widowWidth < 768) {\n                    colorNumEven = colorNumEven === colorLength ? 0 : colorNumEven;\n                    item.tag.forEach(unit => {\n                        tagHtml += `<div class=\"tag mr-2\">#${unit}</div>`\n                    })\n                    evenHtml += htmlFactory(colorNumEven, item, tagHtml);\n                    colorNumEven++\n                    containerOdd.style.display = 'none';\n                }\n\n                if (widowWidth > 768 && index % 2 === 1) {\n                    colorNumOdd = colorNumOdd === colorLength ? 0 : colorNumOdd;\n                    item.tag.forEach(unit => {\n                        tagHtml += `<div class=\"tag mr-2\">#${unit}</div>`\n                    })\n\n                    oddHtml += htmlFactory(colorNumOdd, item, tagHtml);\n                    colorNumOdd++\n                }\n\n                if (widowWidth > 768 && index % 2 === 0) {\n                    colorNumEven = colorNumEven === colorLength ? 0 : colorNumEven;\n                    item.tag.forEach(unit => {\n                        tagHtml += `<div class=\"tag mr-2\">#${unit}</div>`\n                    })\n                    evenHtml += htmlFactory(colorNumEven, item, tagHtml);\n                    colorNumEven++\n                }\n\n                tagHtml = '';\n            })\n\n            containerOdd.innerHTML = oddHtml;\n            containerEven.innerHTML = evenHtml;\n        }\n\n        const tagSelects = document.querySelectorAll('.tag-select');\n        tagSelects.forEach(tag => {\n            tag.addEventListener('click', selectTag);\n        })\n\n\n        function selectTag() {\n            let tip = document.querySelector('.tip');\n            let selected = document.querySelector('.selected');\n            let isSameNode = selected?.isSameNode(this)\n            \n            tip.style.display = 'none';\n\n            this.classList.toggle('selected');\n            if(!isSameNode) selected?.classList.remove('selected');\n            \n\n            if(!this.classList.contains('selected')) filterData = JSON.parse(JSON.stringify(data));\n            if(this.classList.contains('selected')){\n                let result = []\n                filterData = data.reduce((prev, current) => {\n                if (current.tag.includes(this.dataset.value)) result.push(current);\n                return result;\n                }, []);\n            }\n            showCards();\n\n        }\n\n        window.onload = showCards();\n        window.addEventListener('resize', showCards());"]}